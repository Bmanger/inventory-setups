plugins {
	id 'java'
	id "com.github.johnrengelman.shadow" version "5.2.0"
}

repositories {
	mavenLocal()
	maven {
		url = 'http://repo.runelite.net'
	}
	mavenCentral()
}


def runeLiteVersion = '1.7.26'
dependencies {
	compileOnly group: 'net.runelite', name:'client', version: runeLiteVersion

	compileOnly 'org.projectlombok:lombok:1.18.4'
	annotationProcessor 'org.projectlombok:lombok:1.18.4'

	testImplementation 'junit:junit:4.12'
	testImplementation 'org.slf4j:slf4j-simple:1.7.12'
	testImplementation group: 'net.runelite', name:'client', version: runeLiteVersion, {
		exclude group: 'ch.qos.logback', module: 'logback-classic'
	}
	testCompile group: 'org.mockito', name: 'mockito-core', version: '2.23.4'
	testCompile group: 'com.google.inject.extensions', name: 'guice-testlib', version: '4.1.0', {
		exclude group: 'com.google.inject', module: 'guice'
	}
}

group = 'inventorysetups'
version = 'v1.12'
sourceCompatibility = '1.8'

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

task createProperties(dependsOn: processResources) {
	doLast {
		new File("$buildDir/resources/main/version.properties").withWriter { w ->
			Properties p = new Properties()
			p['version'] = project.version.toString()
			p.store w, null
		}
	}
}

classes {
	dependsOn createProperties
}
// To create a shadow jar, run gradlew shadowJar
// Output will be in build/libs
// Run it with java -jar <name>.jar
shadowJar {
	from sourceSets.test.output
	configurations = [project.configurations.testRuntimeClasspath]
	manifest {
		attributes "Main-Class": "inventorysetups.InventorySetupsPluginTest"
	}
}
